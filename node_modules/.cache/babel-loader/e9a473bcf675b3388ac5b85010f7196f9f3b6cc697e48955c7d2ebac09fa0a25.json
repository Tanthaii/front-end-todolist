{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyoka\\\\Downloads\\\\to-do-code-master\\\\to-do-code-master\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // สถานะของ tasks\n\n  // ฟังก์ชันดึงข้อมูล Todo เมื่อเริ่มต้น\n  const fetchTodos = async () => {\n    const response = await fetch('http://localhost:5000/api/todos');\n    const data = await response.json(); // ดึงข้อมูล JSON จาก API\n    setTasks(data); // อัปเดตสถานะ tasks\n  };\n\n  useEffect(() => {\n    fetchTodos(); // เรียกใช้ฟังก์ชันเมื่อโหลดคอมโพเนนต์\n  }, []);\n\n  // ฟังก์ชันเพิ่ม Task\n  const addTasks = async task => {\n    if (task.trim() !== \"\") {\n      // ตรวจสอบว่า task ไม่ว่าง\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: task,\n          completed: false\n        }) // ส่ง title ไปยัง Back-End\n      });\n\n      if (response.ok) {\n        fetchTodos(); // เรียกข้อมูลใหม่เมื่อเพิ่ม Task เสร็จ\n      } else {\n        const errorData = await response.json();\n        console.error(\"Error adding task:\", errorData.error); // แสดงข้อความข้อผิดพลาด\n      }\n    } else {\n      console.error(\"Task title cannot be empty\"); // แสดงข้อความเมื่อ title ว่าง\n    }\n  };\n\n  // ฟังก์ชันลบ Task\n  const deleteTasks = async id => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'DELETE'\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการลบ Task\n  };\n\n  // ฟังก์ชันสำหรับทำเครื่องหมายว่าเสร็จ\n  const toggleComplete = async (id, completed) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !completed\n      }) // ส่งข้อมูลที่อัปเดตไปยัง Back-End\n    });\n\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการอัปเดตสถานะ\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl m-16 font-bold\",\n      children: \"Simple Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTasks: addTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      tasks: tasks,\n      toggleComplete: toggleComplete,\n      deleteTasks: deleteTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TodoForm","TodoList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTodos","response","fetch","data","json","addTasks","task","trim","method","headers","body","JSON","stringify","title","completed","ok","errorData","console","error","deleteTasks","id","toggleComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hyoka/Downloads/to-do-code-master/to-do-code-master/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]); // สถานะของ tasks\n\n  // ฟังก์ชันดึงข้อมูล Todo เมื่อเริ่มต้น\n  const fetchTodos = async () => {\n    const response = await fetch('http://localhost:5000/api/todos');\n    const data = await response.json(); // ดึงข้อมูล JSON จาก API\n    setTasks(data); // อัปเดตสถานะ tasks\n  };\n\n  useEffect(() => {\n    fetchTodos(); // เรียกใช้ฟังก์ชันเมื่อโหลดคอมโพเนนต์\n  }, []);\n\n  // ฟังก์ชันเพิ่ม Task\n  const addTasks = async (task) => {\n    if (task.trim() !== \"\") { // ตรวจสอบว่า task ไม่ว่าง\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: task, completed: false }), // ส่ง title ไปยัง Back-End\n      });\n\n      if (response.ok) {\n        fetchTodos(); // เรียกข้อมูลใหม่เมื่อเพิ่ม Task เสร็จ\n      } else {\n        const errorData = await response.json();\n        console.error(\"Error adding task:\", errorData.error); // แสดงข้อความข้อผิดพลาด\n      }\n    } else {\n      console.error(\"Task title cannot be empty\"); // แสดงข้อความเมื่อ title ว่าง\n    }\n  };\n\n  // ฟังก์ชันลบ Task\n  const deleteTasks = async (id) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'DELETE',\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการลบ Task\n  };\n\n  // ฟังก์ชันสำหรับทำเครื่องหมายว่าเสร็จ\n  const toggleComplete = async (id, completed) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ completed: !completed }), // ส่งข้อมูลที่อัปเดตไปยัง Back-End\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการอัปเดตสถานะ\n  };\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h1 className=\"text-4xl m-16 font-bold\">Simple Todo App</h1>\n      <TodoForm addTasks={addTasks} />\n      <TodoList tasks={tasks} toggleComplete={toggleComplete} deleteTasks={deleteTasks} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}