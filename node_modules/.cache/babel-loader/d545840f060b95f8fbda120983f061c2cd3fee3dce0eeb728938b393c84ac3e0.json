{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyoka\\\\Downloads\\\\to-do-code-master\\\\to-do-code-master\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // สถานะของ tasks\n  const [task, setTask] = useState(\"\"); // สถานะของ task\n\n  // ฟังก์ชันดึงข้อมูล Todo เมื่อเริ่มต้น\n  const fetchTodos = async () => {\n    const response = await fetch('http://localhost:5000/api/todos');\n    const data = await response.json(); // ดึงข้อมูล JSON จาก API\n    setTasks(data); // อัปเดตสถานะ tasks\n  };\n\n  useEffect(() => {\n    fetchTodos(); // เรียกใช้ฟังก์ชันเมื่อโหลดคอมโพเนนต์\n  }, []);\n\n  // ฟังก์ชันเพิ่ม Task\n  const addTasks = async () => {\n    console.log(\"Task to be added:\", task); // ตรวจสอบค่าของ task\n\n    if (task.trim() !== \"\") {\n      // ตรวจสอบว่า task ไม่ว่าง\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: task,\n          completed: false\n        }) // ส่ง title ไปยัง Back-End\n      });\n\n      if (response.ok) {\n        fetchTodos(); // เรียกข้อมูลใหม่เมื่อเพิ่ม Task เสร็จ\n        setTask(\"\"); // ล้างฟิลด์กรอกข้อมูล\n      } else {\n        // ถ้ามีข้อผิดพลาดจาก Back-End ให้แสดงข้อความ\n        const errorData = await response.json();\n        console.error(\"Error adding task:\", errorData.error); // แสดงข้อความข้อผิดพลาด\n      }\n    } else {\n      console.error(\"Task title cannot be empty\"); // แสดงข้อความเมื่อ title ว่าง\n    }\n  };\n\n  // ฟังก์ชันลบ Task\n  const deleteTasks = async id => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'DELETE'\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการลบ Task\n  };\n\n  // ฟังก์ชันสำหรับทำเครื่องหมายว่าเสร็จ\n  const toggleComplete = async (id, completed) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !completed\n      }) // ส่งข้อมูลที่อัปเดตไปยัง Back-End\n    });\n\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการอัปเดตสถานะ\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl m-16 font-bold\",\n      children: \"Simple Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"bg-slate-100 rounded-md p-4 m-4\",\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value) // ตั้งค่า task\n        ,\n        placeholder: \"Create a new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTasks // เรียกใช้ฟังก์ชัน addTasks เมื่อคลิก\n        ,\n        className: \"bg-green-500 text-white p-3 m-3 rounded-md font-bold hover:bg-green-600\",\n        children: \"Add Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tasks.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex bg-slate-100 m-4 py-4 pl-12 pr-4 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: `self-center font-semibold pr-10 mr-6 grow ${item.completed ? 'line-through' : ''}`,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleComplete(item.id, item.completed) // ทำเครื่องหมายว่าเสร็จ\n            ,\n            className: \"bg-green-500 text-white p-2 mx-1 rounded-md font-bold hover:bg-green-600\",\n            children: item.completed ? \"Undo\" : \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTasks(item.id) // ลบ Task\n            ,\n            className: \"bg-red-500 text-white p-2 mx-1 rounded-md font-bold hover:bg-red-600\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Task Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NktqGvpBhMQAnldMqQY9lRbnw/Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","task","setTask","fetchTodos","response","fetch","data","json","addTasks","console","log","trim","method","headers","body","JSON","stringify","title","completed","ok","errorData","error","deleteTasks","id","toggleComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","item","_c","$RefreshReg$"],"sources":["C:/Users/hyoka/Downloads/to-do-code-master/to-do-code-master/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]); // สถานะของ tasks\n  const [task, setTask] = useState(\"\"); // สถานะของ task\n\n  // ฟังก์ชันดึงข้อมูล Todo เมื่อเริ่มต้น\n  const fetchTodos = async () => {\n    const response = await fetch('http://localhost:5000/api/todos');\n    const data = await response.json(); // ดึงข้อมูล JSON จาก API\n    setTasks(data); // อัปเดตสถานะ tasks\n  };\n\n  useEffect(() => {\n    fetchTodos(); // เรียกใช้ฟังก์ชันเมื่อโหลดคอมโพเนนต์\n  }, []);\n\n  // ฟังก์ชันเพิ่ม Task\n  const addTasks = async () => {\n    console.log(\"Task to be added:\", task); // ตรวจสอบค่าของ task\n\n    if (task.trim() !== \"\") { // ตรวจสอบว่า task ไม่ว่าง\n      const response = await fetch('http://localhost:5000/api/todos', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title: task, completed: false }), // ส่ง title ไปยัง Back-End\n      });\n\n      if (response.ok) {\n        fetchTodos(); // เรียกข้อมูลใหม่เมื่อเพิ่ม Task เสร็จ\n        setTask(\"\"); // ล้างฟิลด์กรอกข้อมูล\n      } else {\n        // ถ้ามีข้อผิดพลาดจาก Back-End ให้แสดงข้อความ\n        const errorData = await response.json();\n        console.error(\"Error adding task:\", errorData.error); // แสดงข้อความข้อผิดพลาด\n      }\n    } else {\n      console.error(\"Task title cannot be empty\"); // แสดงข้อความเมื่อ title ว่าง\n    }\n  };\n\n  // ฟังก์ชันลบ Task\n  const deleteTasks = async (id) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'DELETE',\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการลบ Task\n  };\n\n  // ฟังก์ชันสำหรับทำเครื่องหมายว่าเสร็จ\n  const toggleComplete = async (id, completed) => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ completed: !completed }), // ส่งข้อมูลที่อัปเดตไปยัง Back-End\n    });\n    fetchTodos(); // เรียกข้อมูลใหม่เมื่อมีการอัปเดตสถานะ\n  };\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <h1 className=\"text-4xl m-16 font-bold\">Simple Todo App</h1>\n      <div className=\"p-6\">\n        <input\n          className=\"bg-slate-100 rounded-md p-4 m-4\"\n          type=\"text\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)} // ตั้งค่า task\n          placeholder=\"Create a new todo\"\n        />\n        <button\n          onClick={addTasks} // เรียกใช้ฟังก์ชัน addTasks เมื่อคลิก\n          className=\"bg-green-500 text-white p-3 m-3 rounded-md font-bold hover:bg-green-600\"\n        >\n          Add Tasks\n        </button>\n      </div>\n      <div>\n        {tasks.length > 0 ? (\n          <ul>\n            {tasks.map((item) => (\n              <div className=\"flex bg-slate-100 m-4 py-4 pl-12 pr-4 rounded-md\" key={item.id}>\n                <li className={`self-center font-semibold pr-10 mr-6 grow ${item.completed ? 'line-through' : ''}`}>\n                  {item.title}\n                </li>\n                <button\n                  onClick={() => toggleComplete(item.id, item.completed)} // ทำเครื่องหมายว่าเสร็จ\n                  className=\"bg-green-500 text-white p-2 mx-1 rounded-md font-bold hover:bg-green-600\"\n                >\n                  {item.completed ? \"Undo\" : \"Done\"}\n                </button>\n                <button\n                  onClick={() => deleteTasks(item.id)} // ลบ Task\n                  className=\"bg-red-500 text-white p-2 mx-1 rounded-md font-bold hover:bg-red-600\"\n                >\n                  Delete\n                </button>\n              </div>\n            ))}\n          </ul>\n        ) : (\n          <div>\n            <p>No Task Found</p> {/* แสดงข้อความเมื่อไม่มี Task */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}